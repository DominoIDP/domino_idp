-----------------------------------------------------------------------------

Vagrant VM status commands:
- Start/build instance:  `vagrant up` or for logging use ./vagrant_up.sh
- SSH to instance:  `vagrant ssh`     or for logging use ./vagrant_ssh.sh
- Re-sync files:    'vagrant rsync'
- Reload the VM:    `vagrant reload`
- Stop instance:    `vagrant halt`
- Delete instance:  `vagrant destroy`

-----------------------------------------------------------------------------

Domino specific commands:

1) View the status of the automatic setup:
cat /local/dominodata/IBM_TECHNICAL_SUPPORT/autoconfigure.log

2) Start Domino:
./vagrant_ssh.sh
screen
sudo su
su - domino
/opt/hcl/domino/bin/server
"<ctrl>-d" to detach from screen
"screen -ls" to list screen sessions
"screen -r" to resume screen session

3) Issue Domino commands
help
sh server
sh tasks
load http
tell http show thread state
tell http show security
load runjava
tell runjava quit
tell runjava show tasks
exit

4) Retrieve the user.id from /local/notesjava/user.id by SCPing or copying it to the Windows VM which will run Notes Client, Domino Designer, and Domino Administrator.  The user.id password is the one defined in the setup.json which is currently 'password'

-----------------------------------------------------------------------------

Stand-alone Java testing commands:

Do NOT run these from within screen for some reason:

Run this command ONCE after creating a fresh instance to generate /local/notesjava/names.nsf:
- Create a fresh names database:  `cd /local/notesjava; java -jar ./CreateNamesDatabase.jar`
- Password is the one defined in the setup.json which is currently 'password'


Test stand-alone Java API operations:
- Verify user:                    `cd /local/notesjava; java -jar ./CheckNotesUser.jar`

- Verify connection to database:  `cd /local/notesjava; java -jar ./CheckDatabase.jar <server> <database>`

Source code and build scripts are located in the VM here:
/home/vagrant/dist-src
/home/vagrant/dist-build

-----------------------------------------------------------------------------

To test Java servlets:

Managing Java™ servlets on a Web server
https://help.hcltechsw.com/domino/12.0.0/admin/conf_managingjavaservletsonawebserver_t.html

Including Java™ servlets in Web applications
https://help.hcltechsw.com/dom_designer/12.0.0/basic/H_OVERVIEW_OF_JAVA_SERVLETS.html

Java Servlet Specification (prior to EE4J initiative transition):
https://javaee.github.io/servlet-spec/

Elipse EE4J Project:
https://github.com/eclipse-ee4j

Java Servlet 4.0 API Specification:
https://javadoc.io/doc/javax.servlet/javax.servlet-api/latest/index.html

Introduction to Servlets with examples:
https://www3.ntu.edu.sg/home/ehchua/programming/java/JavaServlets.html

-----------------------------------------------------------------------------

To see the IP of the VM to avoid dependence on port forwarding:
./vagrant_ssh.sh
ip address show

-----------------------------------------------------------------------------

Copying files from the VM to your Host:

I finally gave up on trying to get SCP to work with the public, and turned on the VM's SSH daemon to allow password authentication so I could use FileZilla.

To use SCP to the VM with FileZilla, read these:
https://superuser.com/questions/1011928/how-can-i-connect-filezilla-to-a-vagrant-vm
https://cloudmaniac.net/how-to-fix-ssh-too-many-authentication-failures/
https://superuser.com/questions/268776/how-do-i-configure-ssh-so-it-doesnt-try-all-the-identity-files-automatically
https://serverpilot.io/docs/how-to-enable-ssh-password-authentication/

examples:
scp -v vagrant@10.0.2.15/opt/hcl/domino/notes/latest/linux/jvm/lib/ext/Notes.jar ./dist-support/Notes.jar.v12

scp -o IdentitiesOnly=yes -F /dev/null -i ~/.ssh/id_ed25519.pub -v vagrant@10.0.2.15/opt/hcl/domino/notes/latest/linux/jvm/lib/ext/Notes.jar ./dist-support/Notes.jar.v12 

 
 
